{"version":3,"file":"sharp.js","sourceRoot":"","sources":["../src/sharp.ts"],"names":[],"mappings":"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","sourcesContent":["import semver from 'semver';\nimport spawnAsync from '@expo/spawn-async';\nimport resolveFrom from 'resolve-from';\nimport { Options, SharpCommandOptions, SharpGlobalOptions } from './sharp.types';\n\nconst SHARP_HELP_PATTERN = /\\n\\nSpecify --help for available options/g;\n\nexport async function resizeBufferAsync(buffer: Buffer, sizes: number[]): Promise<Buffer[]> {\n  const sharp = await findSharpInstanceAsync();\n\n  const metadata = await sharp(buffer).metadata();\n  // Create buffer for each size\n  const resizedBuffers = await Promise.all(\n    sizes.map(dimension => {\n      const density = (dimension / Math.max(metadata.width, metadata.height)) * metadata.density;\n      return sharp(buffer, {\n        density: isNaN(density) ? undefined : Math.ceil(density),\n      })\n        .resize(dimension, dimension, { fit: 'contain', background: 'transparent' })\n        .toBuffer();\n    })\n  );\n\n  return resizedBuffers;\n}\n\nexport async function isAvailableAsync(): Promise<boolean> {\n  try {\n    return !!(await findSharpBinAsync());\n  } catch (_) {\n    return false;\n  }\n}\n\nexport async function sharpAsync(\n  options: SharpGlobalOptions,\n  commands: SharpCommandOptions[] = []\n): Promise<string[]> {\n  const bin = await findSharpBinAsync();\n  try {\n    const { stdout } = await spawnAsync(bin, [\n      ...getOptions(options),\n      ...getCommandOptions(commands),\n    ]);\n    const outputFilePaths = stdout.trim().split('\\n');\n    return outputFilePaths;\n  } catch (error) {\n    if (error.stderr) {\n      throw new Error(\n        '\\nProcessing images using sharp-cli failed: ' +\n          error.message +\n          '\\nOutput: ' +\n          error.stderr.replace(SHARP_HELP_PATTERN, '')\n      );\n    } else {\n      throw error;\n    }\n  }\n}\n\nfunction getOptions(options: Options): string[] {\n  const args = [];\n  for (const [key, value] of Object.entries(options)) {\n    if (value != null && value !== false) {\n      if (typeof value === 'boolean') {\n        args.push(`--${key}`);\n      } else if (typeof value === 'number') {\n        args.push(`--${key}`, value.toFixed());\n      } else {\n        args.push(`--${key}`, value);\n      }\n    }\n  }\n  return args;\n}\n\nfunction getCommandOptions(commands: SharpCommandOptions[]): string[] {\n  const args: string[] = [];\n  for (const command of commands) {\n    if (command.operation === 'resize') {\n      const { operation, width, ...namedOptions } = command;\n      args.push(operation, width.toFixed(), ...getOptions(namedOptions));\n    } else {\n      const { operation, ...namedOptions } = command;\n      args.push(operation, ...getOptions(namedOptions));\n    }\n    args.push('--');\n  }\n  return args;\n}\n\nlet _sharpBin: string | null = null;\nlet _sharpInstance: any | null = null;\n\nasync function findSharpBinAsync(): Promise<string> {\n  if (_sharpBin) {\n    return _sharpBin;\n  }\n  const requiredCliVersion = require('@expo/image-utils/package.json').peerDependencies[\n    'sharp-cli'\n  ];\n  try {\n    const sharpCliPackage = require('sharp-cli/package.json');\n    const libVipsVersion = require('sharp').versions.vips;\n    if (\n      sharpCliPackage &&\n      semver.satisfies(sharpCliPackage.version, requiredCliVersion) &&\n      typeof sharpCliPackage.bin.sharp === 'string' &&\n      typeof libVipsVersion === 'string'\n    ) {\n      _sharpBin = require.resolve(`sharp-cli/${sharpCliPackage.bin.sharp}`);\n      return _sharpBin;\n    }\n  } catch (e) {\n    // fall back to global sharp-cli\n  }\n\n  let installedCliVersion;\n  try {\n    installedCliVersion = (await spawnAsync('sharp', ['--version'])).stdout.toString().trim();\n  } catch (e) {\n    throw notFoundError(requiredCliVersion);\n  }\n\n  if (!semver.satisfies(installedCliVersion, requiredCliVersion)) {\n    showVersionMismatchWarning(requiredCliVersion, installedCliVersion);\n  }\n  _sharpBin = 'sharp';\n  return _sharpBin;\n}\n\nexport async function findSharpInstanceAsync(): Promise<any | null> {\n  if (_sharpInstance) {\n    return _sharpInstance;\n  }\n  // Ensure sharp-cli version is correct\n  await findSharpBinAsync();\n\n  // Attempt to use local sharp package\n  try {\n    const sharp = require('sharp');\n    _sharpInstance = sharp;\n    return sharp;\n  } catch (_) {}\n\n  // Attempt to resolve the sharp instance used by the global CLI\n  let sharpCliPath;\n  try {\n    sharpCliPath = (await spawnAsync('which', ['sharp'])).stdout.toString().trim();\n  } catch (e) {\n    throw new Error(`Failed to find the instance of sharp used by the global sharp-cli package.`);\n  }\n\n  // resolve sharp from the sharp-cli package\n  const sharpPath = resolveFrom.silent(sharpCliPath, 'sharp');\n\n  if (sharpPath) {\n    try {\n      // attempt to require the global sharp package\n      _sharpInstance = require(sharpPath);\n    } catch (_) {}\n  }\n\n  return _sharpInstance;\n}\n\nfunction notFoundError(requiredCliVersion: string): Error {\n  return new Error(\n    `This command requires version ${requiredCliVersion} of \\`sharp-cli\\`. \\n` +\n      `You can install it using \\`npm install -g sharp-cli@${requiredCliVersion}\\`. \\n` +\n      '\\n' +\n      'For prerequisites, see: https://sharp.dimens.io/en/stable/install/#prerequisites'\n  );\n}\n\nlet versionMismatchWarningShown = false;\n\nfunction showVersionMismatchWarning(requiredCliVersion: string, installedCliVersion: string) {\n  if (versionMismatchWarningShown) {\n    return;\n  }\n  console.warn(\n    `Warning: This command requires version ${requiredCliVersion} of \\`sharp-cli\\`. \\n` +\n      `Currently installed version: \"${installedCliVersion}\" \\n` +\n      `Required version: \"${requiredCliVersion}\" \\n` +\n      `You can install it using \\`npm install -g sharp-cli@${requiredCliVersion}\\`. \\n` +\n      '\\n' +\n      'For prerequisites, see: https://sharp.dimens.io/en/stable/install/#prerequisites'\n  );\n  versionMismatchWarningShown = true;\n}\n"]}