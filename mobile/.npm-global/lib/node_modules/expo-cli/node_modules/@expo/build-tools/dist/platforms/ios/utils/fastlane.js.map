{"version":3,"file":"fastlane.js","sourceRoot":"","sources":["../../../../src/platforms/ios/utils/fastlane.ts"],"names":[],"mappings":";;;;;AAGA,iEAAyC;AAQzC,KAAK,UAAU,WAAW,CAAC,YAAsB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,KAAsB,EAAE;IAC5F,MAAM,eAAe,GAAG;QACtB,uBAAuB,EAAE,GAAG;QAC5B,0BAA0B,EAAE,GAAG;QAC/B,EAAE,EAAE,GAAG;QACP,MAAM,EAAE,aAAa;QACrB,GAAG,IAAI;KACR,CAAC;IACF,OAAO,MAAM,eAAK,CAChB,UAAU,EACV,YAAY,EACZ;QACE,GAAG,EAAE,EAAE,GAAG,OAAO,CAAC,GAAG,EAAE,GAAG,eAAe,EAAE;QAC3C,MAAM;QACN,GAAG;KACJ,CACF,CAAC;AACJ,CAAC;AAED,kBAAe,WAAW,CAAC","sourcesContent":["import { SpawnResult } from '@expo/spawn-async';\nimport bunyan from 'bunyan';\n\nimport spawn from '../../../utils/spawn';\n\ninterface FastlaneOptions {\n  logger?: bunyan;\n  envs?: { [key: string]: string };\n  cwd?: string;\n}\n\nasync function runFastlane(fastlaneArgs: string[], { logger, envs, cwd }: FastlaneOptions = {}): Promise<SpawnResult> {\n  const fastlaneEnvVars = {\n    FASTLANE_DISABLE_COLORS: '1',\n    FASTLANE_SKIP_UPDATE_CHECK: '1',\n    CI: '1',\n    LC_ALL: 'en_US.UTF-8',\n    ...envs,\n  };\n  return await spawn(\n    'fastlane',\n    fastlaneArgs,\n    {\n      env: { ...process.env, ...fastlaneEnvVars },\n      logger,\n      cwd,\n    },\n  );\n}\n\nexport default runFastlane;\n"]}