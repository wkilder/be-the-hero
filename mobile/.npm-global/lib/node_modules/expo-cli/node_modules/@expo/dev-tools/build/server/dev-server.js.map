{"version":3,"file":"dev-server.js","sourceRoot":"","sources":["../../server/dev-server.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,iEAAwD;AACxD,mCAAoC;AACpC,sDAA8B;AAC9B,gDAAwB;AACxB,gDAAwB;AACxB,8EAAsD;AAEtD,qDAAwF;AAExF,MAAM,IAAI,GAAG,IAAI,CAAC;AAElB,SAAe,GAAG;;QAChB,IAAI;YACF,MAAM,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACnC,IAAI,CAAC,UAAU,EAAE;gBACf,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;aAC7E;YAED,MAAM,GAAG,GAAQ,cAAI,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;YACrC,MAAM,GAAG,CAAC,OAAO,EAAE,CAAC;YAEpB,MAAM,MAAM,GAAG,iBAAO,EAAE,CAAC;YACzB,MAAM,qBAAqB,GAAG,MAAM,iDAAgC,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;YACrF,MAAM,CAAC,GAAG,CAAC,iBAAiB,EAAE,qBAAqB,CAAC,cAAc,CAAC,CAAC;YACpE,MAAM,CAAC,GAAG,CACR,WAAW,EACX,uCAAe,CAAC;gBACd,WAAW,EAAE,qBAAqB,CAAC,mBAAmB;gBACtD,yBAAyB,EAAE;oBACzB,yBAAyB,EAAE,qBAAqB,CAAC,yBAAyB;iBAC3E;aACF,CAAC,CACH,CAAC;YACF,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,iBAAiB,EAAE,CAAC,CAAC;YAEzC,MAAM,UAAU,GAAG,cAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YAC7C,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBACpC,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;gBACjC,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;gBACtC,UAAU,CAAC,MAAM,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;YACvC,CAAC,CAAC,CAAC;YACH,mCAAkB,CAAC,UAAU,EAAE,UAAU,EAAE,qBAAqB,CAAC,CAAC;YAClE,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;YACnC,MAAM,aAAO,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;YACrC,IAAI,GAAG,GAAG,oBAAoB,IAAI,EAAE,CAAC;YACrC,OAAO,CAAC,GAAG,CAAC,iCAAiC,GAAG,EAAE,CAAC,CAAC;YACpD,qBAAW,CAAC,GAAG,CAAC,CAAC;SAClB;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACjB;IACH,CAAC;CAAA;AAED,GAAG,EAAE,CAAC","sourcesContent":["import { graphiqlExpress } from 'apollo-server-express';\nimport { Project } from '@expo/xdl';\nimport express from 'express';\nimport http from 'http';\nimport next from 'next';\nimport openBrowser from 'react-dev-utils/openBrowser';\n\nimport { createAuthenticationContextAsync, startGraphQLServer } from './DevToolsServer';\n\nconst PORT = 3333;\n\nasync function run(): Promise<void> {\n  try {\n    const projectDir = process.argv[2];\n    if (!projectDir) {\n      throw new Error('No project dir specified.\\nUsage: yarn dev <project-dir>');\n    }\n\n    const app: any = next({ dev: true });\n    await app.prepare();\n\n    const server = express();\n    const authenticationContext = await createAuthenticationContextAsync({ port: PORT });\n    server.get('/dev-tools-info', authenticationContext.requestHandler);\n    server.get(\n      '/graphiql',\n      graphiqlExpress({\n        endpointURL: authenticationContext.webSocketGraphQLUrl,\n        websocketConnectionParams: {\n          clientAuthenticationToken: authenticationContext.clientAuthenticationToken,\n        },\n      })\n    );\n    server.get('*', app.getRequestHandler());\n\n    const httpServer = http.createServer(server);\n    await new Promise((resolve, reject) => {\n      httpServer.once('error', reject);\n      httpServer.once('listening', resolve);\n      httpServer.listen(PORT, 'localhost');\n    });\n    startGraphQLServer(projectDir, httpServer, authenticationContext);\n    console.log('Starting project...');\n    await Project.startAsync(projectDir);\n    let url = `http://localhost:${PORT}`;\n    console.log(`Development server running at ${url}`);\n    openBrowser(url);\n  } catch (error) {\n    console.error(error);\n    process.exit(1);\n  }\n}\n\nrun();\n"]}