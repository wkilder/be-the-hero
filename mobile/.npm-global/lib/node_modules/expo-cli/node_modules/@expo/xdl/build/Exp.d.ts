import { AppJSONConfig, BareAppConfig } from '@expo/config';
import { PackageSpec } from 'pacote';
export declare function determineEntryPoint(projectRoot: string, platform?: string): string;
export declare function extractAndInitializeTemplateApp(templateSpec: PackageSpec, projectRoot: string, packageManager: "yarn" | "npm" | undefined, config: AppJSONConfig | BareAppConfig): Promise<string>;
export declare function extractTemplateAppAsync(templateSpec: PackageSpec, targetPath: string, config: AppJSONConfig | BareAppConfig): Promise<string>;
export declare function saveRecentExpRootAsync(root: string): Promise<any>;
declare type PublishInfo = {
    args: {
        username: string;
        remoteUsername: string;
        remotePackageName: string;
        remoteFullPackageName: string;
        sdkVersion: string;
        iosBundleIdentifier?: string | null;
        androidPackage?: string | null;
    };
};
export declare function getPublishInfoAsync(root: string): Promise<PublishInfo>;
export declare function sendAsync(recipient: string, url_: string, allowUnauthed?: boolean): Promise<any>;
export declare function getProjectRandomnessAsync(projectRoot: string): Promise<string>;
export declare function resetProjectRandomnessAsync(projectRoot: string): Promise<string>;
export {};
