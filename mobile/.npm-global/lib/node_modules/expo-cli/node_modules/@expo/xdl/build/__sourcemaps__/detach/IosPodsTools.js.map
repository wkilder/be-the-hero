{"version":3,"sources":["detach/IosPodsTools.js"],"names":["_validatePodfileSubstitutions","substitutions","validKeys","key","hasOwnProperty","includes","Error","_renderExpoKitDependency","options","sdkVersion","sdkMajorVersion","parseSdkMajorVersion","let","attributes","expoKitPath","path","expoKitTag","git","tag","branch","subspecs","process","env","EXPO_UNIVERSE_DIR","inhibit_warnings","dependency","indentString","_renderDependencyAttributes","_renderUnversionedReactNativeDependency","glogLibraryName","_renderUnversionedReactDependency","_renderUnversionedYogaDependency","_renderUnversionedThirdPartyDependency","join","reactNativePath","podName","podspecRelativePath","podspec","attributesStrings","Object","keys","value","JSON","stringify","push","createSdkFilterFn","String","toUpperCase","undefined","match","sdkVersionWithUnderscores","replace","i","endsWith","async","_renderVersionedReactNativeDependenciesAsync","templatesDirectory","versionedReactNativePath","expoSubspecs","shellAppSdkVersion","filterFn","result","await","_concatTemplateFilesInDirectoryAsync","map","subspec","_renderVersionedReactNativePostinstallsAsync","directory","templateFilenames","glob","sort","filteredTemplateFilenames","filter","templateStrings","fileIdx","nFiles","length","filename","templateString","fs","readFile","_renderDetachedPostinstall","isServiceContext","podNameExpression","targetExpression","podsRootSub","maybeDetachedServiceDef","maybeFrameworkSearchPathDef","_renderUnversionedPostinstall","podsToChangeDeployTarget","podsToChangeRB","pod","deploymentTarget","podsToChangeDeployTargetIfStart","podsToChangeDeployTargetIfEnd","gccPreprocessorDefinitionsCondition","_renderTestTarget","_renderPodDependenciesAsync","dependenciesConfigPath","dependencies","JsonFile","readAsync","type","isPodfile","noWarningsFlag","depsStrings","builder","comments","commentLine","otherPodfileFlags","name","version","renderExpoKitPodspecAsync","pathToTemplate","pathToOutput","moreSubstitutions","dirname","IOS_EXPONENT_CLIENT_VERSION","writeFile","_renderUnversionedUniversalModulesDependencies","universalModules","universalModulesPath","moduleInfo","_renderUnversionedUniversalModuleDependency","renderPodfileAsync","REACT_NATIVE_PATH","rnDependencyOptions","EXPOKIT_PATH","EXPOKIT_TAG","expoKitDependencyOptions","versionedRnPath","VERSIONED_REACT_NATIVE_PATH","rnExpoSubspecs","REACT_NATIVE_EXPO_SUBSPECS","versionedDependencies","versionedPostinstalls","podDependencies","UNIVERSAL_MODULES","EXPONENT_CLIENT_DEPS","EXPOKIT_DEPENDENCY","PODFILE_UNVERSIONED_EXPO_MODULES_DEPENDENCIES","UNIVERSAL_MODULES_PATH","PODFILE_UNVERSIONED_RN_DEPENDENCY","PODFILE_UNVERSIONED_POSTINSTALL","PODFILE_DETACHED_POSTINSTALL","PODFILE_DETACHED_SERVICE_POSTINSTALL","PODFILE_VERSIONED_RN_DEPENDENCIES","PODFILE_VERSIONED_POSTINSTALLS","PODFILE_TEST_TARGET","replacement","RegExp"],"mappings":"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","file":"../../detach/IosPodsTools.js","sourcesContent":["import fs from 'fs-extra';\nimport glob from 'glob-promise';\nimport indentString from 'indent-string';\nimport JsonFile from '@expo/json-file';\nimport path from 'path';\n\nimport { parseSdkMajorVersion } from './ExponentTools';\n\nfunction _validatePodfileSubstitutions(substitutions) {\n  const validKeys = [\n    // a pod dependency on ExpoKit (can be local or remote)\n    'EXPOKIT_DEPENDENCY',\n    // local path to ExpoKit dependency\n    'EXPOKIT_PATH',\n    // tag to use for ExpoKit dependency\n    'EXPOKIT_TAG',\n    // the contents of dependencies.json enumerated as deps in podfile format\n    'EXPONENT_CLIENT_DEPS',\n    // postinstall for detached projects (defines EX_DETACHED among other things)\n    'PODFILE_DETACHED_POSTINSTALL',\n    // same as previous but also defines EX_DETACHED_SERVICE\n    'PODFILE_DETACHED_SERVICE_POSTINSTALL',\n    // ExponentIntegrationTests\n    'PODFILE_TEST_TARGET',\n    // unversioned react native pod dependency, probably at the path given in\n    // REACT_NATIVE_PATH, with a bunch of subspecs.\n    'PODFILE_UNVERSIONED_RN_DEPENDENCY',\n    // postinstall hook for unversioned deps\n    'PODFILE_UNVERSIONED_POSTINSTALL',\n    // versioned rn dependencies (paths to versioned-react-native directories)\n    // read from template files\n    'PODFILE_VERSIONED_RN_DEPENDENCIES',\n    // versioned rn postinstall hooks read from template files\n    'PODFILE_VERSIONED_POSTINSTALLS',\n    // list of generated Expo subspecs to include under a versioned react native dependency\n    'REACT_NATIVE_EXPO_SUBSPECS',\n    // path to use for the unversioned react native dependency\n    'REACT_NATIVE_PATH',\n    // name of the main build target, e.g. Exponent\n    'TARGET_NAME',\n    // path from Podfile to versioned-react-native\n    'VERSIONED_REACT_NATIVE_PATH',\n    // Expo universal modules dependencies\n    'PODFILE_UNVERSIONED_EXPO_MODULES_DEPENDENCIES',\n    // Universal modules configurations to be included in the Podfile\n    'UNIVERSAL_MODULES',\n    // Relative path from iOS project directory to folder where unimodules are installed.\n    'UNIVERSAL_MODULES_PATH',\n  ];\n\n  for (const key in substitutions) {\n    if (substitutions.hasOwnProperty(key)) {\n      if (!validKeys.includes(key)) {\n        throw new Error(`Unrecognized Podfile template key: ${key}`);\n      }\n    }\n  }\n  return true;\n}\n\nfunction _renderExpoKitDependency(options, sdkVersion) {\n  const sdkMajorVersion = parseSdkMajorVersion(sdkVersion);\n  let attributes;\n  if (options.expoKitPath) {\n    attributes = {\n      path: options.expoKitPath,\n    };\n  } else if (options.expoKitTag) {\n    attributes = {\n      git: 'http://github.com/expo/expo.git',\n      tag: options.expoKitTag,\n    };\n  } else {\n    attributes = {\n      git: 'http://github.com/expo/expo.git',\n      branch: 'master',\n    };\n  }\n\n  // GL subspec is available as of SDK 26\n  // but removed together with CPP subspec in SDK 29\n  if (sdkMajorVersion < 26) {\n    attributes.subspecs = ['Core', 'CPP'];\n  } else if (sdkMajorVersion < 29 && !process.env.EXPO_UNIVERSE_DIR) {\n    attributes.subspecs = ['Core', 'CPP', 'GL'];\n  } else {\n    attributes.subspecs = ['Core'];\n  }\n  attributes.inhibit_warnings = true;\n\n  let dependency = `pod 'ExpoKit',\n${indentString(_renderDependencyAttributes(attributes), 2)}`;\n\n  return indentString(dependency, 2);\n}\n\n/**\n * @param sdkVersion if specified, indicates which sdkVersion this project uses\n *  as 'UNVERSIONED', e.g. if we are detaching a sdk15 project, we render\n *  an unversioned dependency pointing at RN#sdk-15.\n */\nfunction _renderUnversionedReactNativeDependency(options, sdkVersion) {\n  let sdkMajorVersion = parseSdkMajorVersion(sdkVersion);\n\n  if (sdkMajorVersion >= 36) {\n    return indentString(\n      `\n# Install React Native and its dependencies\nrequire_relative '../node_modules/react-native/scripts/autolink-ios.rb'\nuse_react_native!`\n    );\n  }\n\n  const glogLibraryName = sdkMajorVersion < 26 ? 'GLog' : 'glog';\n  return indentString(\n    `\n${_renderUnversionedReactDependency(options)}\n${_renderUnversionedYogaDependency(options)}\n${_renderUnversionedThirdPartyDependency(\n  'DoubleConversion',\n  path.join('third-party-podspecs', 'DoubleConversion.podspec'),\n  options\n)}\n${_renderUnversionedThirdPartyDependency(\n  'Folly',\n  path.join('third-party-podspecs', 'Folly.podspec'),\n  options\n)}\n${_renderUnversionedThirdPartyDependency(\n  glogLibraryName,\n  path.join('third-party-podspecs', `${glogLibraryName}.podspec`),\n  options\n)}\n`,\n    2\n  );\n}\n\nfunction _renderUnversionedReactDependency(options, sdkVersion) {\n  if (!options.reactNativePath) {\n    throw new Error(`Unsupported options for RN dependency: ${options}`);\n  }\n  let attributes = {\n    path: options.reactNativePath,\n    inhibit_warnings: true,\n    subspecs: [\n      'Core',\n      'ART',\n      'RCTActionSheet',\n      'RCTAnimation',\n      'RCTCameraRoll',\n      'RCTGeolocation',\n      'RCTImage',\n      'RCTNetwork',\n      'RCTText',\n      'RCTVibration',\n      'RCTWebSocket',\n      'DevSupport',\n      'CxxBridge',\n    ],\n  };\n  return `pod 'React',\n${indentString(_renderDependencyAttributes(attributes), 2)}`;\n}\n\nfunction _renderUnversionedYogaDependency(options) {\n  let attributes;\n  if (options.reactNativePath) {\n    attributes = {\n      path: path.join(options.reactNativePath, 'ReactCommon', 'yoga'),\n      inhibit_warnings: true,\n    };\n  } else {\n    throw new Error(`Unsupported options for Yoga dependency: ${options}`);\n  }\n  return `pod 'yoga',\n${indentString(_renderDependencyAttributes(attributes), 2)}`;\n}\n\nfunction _renderUnversionedThirdPartyDependency(podName, podspecRelativePath, options) {\n  let attributes;\n  if (options.reactNativePath) {\n    attributes = {\n      podspec: path.join(options.reactNativePath, podspecRelativePath),\n      inhibit_warnings: true,\n    };\n  } else {\n    throw new Error(`Unsupported options for ${podName} dependency: ${options}`);\n  }\n  return `pod '${podName}',\n${indentString(_renderDependencyAttributes(attributes), 2)}`;\n}\n\nfunction _renderDependencyAttributes(attributes) {\n  let attributesStrings = [];\n  for (let key of Object.keys(attributes)) {\n    let value = JSON.stringify(attributes[key], null, 2);\n    attributesStrings.push(`:${key} => ${value}`);\n  }\n  return attributesStrings.join(',\\n');\n}\n\nfunction createSdkFilterFn(sdkVersion) {\n  if (sdkVersion && String(sdkVersion).toUpperCase() === 'UNVERSIONED') {\n    return () => false;\n  }\n  if (sdkVersion === undefined || !sdkVersion.match(/^\\d+\\.\\d+.\\d+$/)) {\n    return;\n  }\n  const sdkVersionWithUnderscores = sdkVersion.replace(/\\./g, '_');\n  return i => i.endsWith(`/ReactABI${sdkVersionWithUnderscores}.rb`);\n}\n\nasync function _renderVersionedReactNativeDependenciesAsync(\n  templatesDirectory,\n  versionedReactNativePath,\n  expoSubspecs,\n  shellAppSdkVersion\n) {\n  const filterFn = createSdkFilterFn(shellAppSdkVersion);\n  let result = await _concatTemplateFilesInDirectoryAsync(\n    path.join(templatesDirectory, 'versioned-react-native', 'dependencies'),\n    filterFn\n  );\n  expoSubspecs = expoSubspecs.map(subspec => `'${subspec}'`).join(', ');\n  result = result.replace(/\\$\\{VERSIONED_REACT_NATIVE_PATH\\}/g, versionedReactNativePath);\n  result = result.replace(/\\$\\{REACT_NATIVE_EXPO_SUBSPECS\\}/g, expoSubspecs);\n  return result;\n}\n\nasync function _renderVersionedReactNativePostinstallsAsync(\n  templatesDirectory,\n  shellAppSdkVersion\n) {\n  const filterFn = createSdkFilterFn(shellAppSdkVersion);\n  return _concatTemplateFilesInDirectoryAsync(\n    path.join(templatesDirectory, 'versioned-react-native', 'postinstalls'),\n    filterFn\n  );\n}\n\nasync function _concatTemplateFilesInDirectoryAsync(directory, filterFn) {\n  let templateFilenames = (await glob(path.join(directory, '*.rb'))).sort();\n  let filteredTemplateFilenames = filterFn ? templateFilenames.filter(filterFn) : templateFilenames;\n  let templateStrings = [];\n  // perform this in series in order to get deterministic output\n  for (let fileIdx = 0, nFiles = filteredTemplateFilenames.length; fileIdx < nFiles; fileIdx++) {\n    const filename = filteredTemplateFilenames[fileIdx];\n    let templateString = await fs.readFile(filename, 'utf8');\n    if (templateString) {\n      templateStrings.push(templateString);\n    }\n  }\n  return templateStrings.join('\\n');\n}\n\nfunction _renderDetachedPostinstall(sdkVersion, isServiceContext) {\n  const sdkMajorVersion = parseSdkMajorVersion(sdkVersion);\n  const podNameExpression = sdkMajorVersion < 33 ? 'target.pod_name' : 'pod_name';\n  const targetExpression = sdkMajorVersion < 33 ? 'target' : 'target_installation_result';\n\n  let podsRootSub = '${PODS_ROOT}';\n  const maybeDetachedServiceDef = isServiceContext\n    ? `config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'EX_DETACHED_SERVICE=1'`\n    : '';\n\n  const maybeFrameworkSearchPathDef =\n    sdkMajorVersion < 33\n      ? `\n          # Needed for GoogleMaps 2.x\n          config.build_settings['FRAMEWORK_SEARCH_PATHS'] ||= []\n          config.build_settings['FRAMEWORK_SEARCH_PATHS'] << '${podsRootSub}/GoogleMaps/Base/Frameworks'\n          config.build_settings['FRAMEWORK_SEARCH_PATHS'] << '${podsRootSub}/GoogleMaps/Maps/Frameworks'`\n      : '';\n  return `\n      if ${podNameExpression} == 'ExpoKit'\n        ${targetExpression}.native_target.build_configurations.each do |config|\n          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']\n          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'EX_DETACHED=1'\n          ${maybeDetachedServiceDef}\n          # Enable Google Maps support\n          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'HAVE_GOOGLE_MAPS=1'\n          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'HAVE_GOOGLE_MAPS_UTILS=1'\n          ${maybeFrameworkSearchPathDef}\n        end\n      end\n`;\n}\n\nfunction _renderUnversionedPostinstall(sdkVersion) {\n  const podsToChangeDeployTarget = [\n    'Amplitude-iOS',\n    'Analytics',\n    'AppAuth',\n    'Branch',\n    'CocoaLumberjack',\n    'FBSDKCoreKit',\n    'FBSDKLoginKit',\n    'FBSDKShareKit',\n    'GPUImage',\n    'JKBigInteger2',\n  ];\n  const podsToChangeRB = `[${podsToChangeDeployTarget.map(pod => `'${pod}'`).join(',')}]`;\n  const sdkMajorVersion = parseSdkMajorVersion(sdkVersion);\n  const podNameExpression = sdkMajorVersion < 33 ? 'target.pod_name' : 'pod_name';\n  const targetExpression = sdkMajorVersion < 33 ? 'target' : 'target_installation_result';\n\n  // SDK31 drops support for iOS 9.0\n  const deploymentTarget = sdkMajorVersion > 30 ? '10.0' : '9.0';\n\n  const podsToChangeDeployTargetIfStart =\n    sdkMajorVersion <= 33 ? `      if ${podsToChangeRB}.include? ${podNameExpression}` : '';\n  const podsToChangeDeployTargetIfEnd = sdkMajorVersion <= 33 ? '      end' : '';\n  const gccPreprocessorDefinitionsCondition =\n    sdkMajorVersion < 36\n      ? `${podNameExpression} == 'React'`\n      : `${podNameExpression}.start_with?('React')`;\n\n  return `\n${podsToChangeDeployTargetIfStart}\n      ${targetExpression}.native_target.build_configurations.each do |config|\n        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '${deploymentTarget}'\n      end\n${podsToChangeDeployTargetIfEnd}\n\n      # Can't specify this in the React podspec because we need to use those podspecs for detached\n      # projects which don't reference ExponentCPP.\n      if ${podNameExpression}.start_with?('React')\n        ${targetExpression}.native_target.build_configurations.each do |config|\n          config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '${deploymentTarget}'\n          config.build_settings['HEADER_SEARCH_PATHS'] ||= ['$(inherited)']\n        end\n      end\n\n      # Build React Native with RCT_DEV enabled and RCT_ENABLE_INSPECTOR and\n      # RCT_ENABLE_PACKAGER_CONNECTION disabled\n      next unless ${gccPreprocessorDefinitionsCondition}\n      ${targetExpression}.native_target.build_configurations.each do |config|\n        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']\n        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'RCT_DEV=1'\n        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'RCT_ENABLE_INSPECTOR=0'\n        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'ENABLE_PACKAGER_CONNECTION=0'\n      end\n`;\n}\n\nfunction _renderTestTarget(reactNativePath) {\n  return `\n  target 'ExponentIntegrationTests' do\n    inherit! :search_paths\n  end\n\n  target 'Tests' do\n    inherit! :search_paths\n  end\n`;\n}\n\nasync function _renderPodDependenciesAsync(dependenciesConfigPath, options) {\n  let dependencies = await new JsonFile(dependenciesConfigPath).readAsync();\n  const type = options.isPodfile ? 'pod' : 'ss.dependency';\n  const noWarningsFlag = options.isPodfile ? `, :inhibit_warnings => true` : '';\n  let depsStrings = dependencies.map(dependency => {\n    let builder = '';\n    if (dependency.comments) {\n      builder += dependency.comments.map(commentLine => `  # ${commentLine}`).join('\\n');\n      builder += '\\n';\n    }\n    const otherPodfileFlags = options.isPodfile && dependency.otherPodfileFlags;\n    builder += `  ${type} '${dependency.name}', '${\n      dependency.version\n    }'${noWarningsFlag}${otherPodfileFlags || ''}`;\n    return builder;\n  });\n  return depsStrings.join('\\n');\n}\n\nasync function renderExpoKitPodspecAsync(pathToTemplate, pathToOutput, moreSubstitutions) {\n  let templatesDirectory = path.dirname(pathToTemplate);\n  let templateString = await fs.readFile(pathToTemplate, 'utf8');\n  let dependencies = await _renderPodDependenciesAsync(\n    path.join(templatesDirectory, 'dependencies.json'),\n    { isPodfile: false }\n  );\n  let result = templateString.replace(/\\$\\{IOS_EXPOKIT_DEPS\\}/g, indentString(dependencies, 2));\n  if (moreSubstitutions && moreSubstitutions.IOS_EXPONENT_CLIENT_VERSION) {\n    result = result.replace(\n      /\\$\\{IOS_EXPONENT_CLIENT_VERSION\\}/g,\n      moreSubstitutions.IOS_EXPONENT_CLIENT_VERSION\n    );\n  }\n\n  await fs.writeFile(pathToOutput, result);\n}\n\nfunction _renderUnversionedUniversalModulesDependencies(\n  universalModules,\n  universalModulesPath,\n  sdkVersion\n) {\n  const sdkMajorVersion = parseSdkMajorVersion(sdkVersion);\n\n  if (sdkMajorVersion >= 33) {\n    return indentString(\n      `\n# Install unimodules\nrequire_relative '../node_modules/react-native-unimodules/cocoapods.rb'\nuse_unimodules!(\n  modules_paths: ['${universalModulesPath}'],\n  exclude: [\n    'expo-bluetooth',\n    'expo-in-app-purchases',\n    'expo-payments-stripe',\n  ],\n)`,\n      2\n    );\n  } else {\n    return indentString(\n      universalModules\n        .map(moduleInfo =>\n          _renderUnversionedUniversalModuleDependency(\n            moduleInfo.podName,\n            moduleInfo.path,\n            sdkVersion\n          )\n        )\n        .join('\\n'),\n      2\n    );\n  }\n}\n\nfunction _renderUnversionedUniversalModuleDependency(podName, path, sdkVersion) {\n  const attributes = {\n    path,\n  };\n  return `pod '${podName}',\n${indentString(_renderDependencyAttributes(attributes), 2)}`;\n}\n\n/**\n *  @param pathToTemplate path to template Podfile\n *  @param pathToOutput path to render final Podfile\n *  @param moreSubstitutions dictionary of additional substitution keys and values to replace\n *         in the template, such as: TARGET_NAME, REACT_NATIVE_PATH\n */\nasync function renderPodfileAsync(\n  pathToTemplate,\n  pathToOutput,\n  moreSubstitutions,\n  shellAppSdkVersion,\n  sdkVersion = 'UNVERSIONED'\n) {\n  if (!moreSubstitutions) {\n    moreSubstitutions = {};\n  }\n  let templatesDirectory = path.dirname(pathToTemplate);\n  let templateString = await fs.readFile(pathToTemplate, 'utf8');\n\n  let reactNativePath = moreSubstitutions.REACT_NATIVE_PATH;\n  let rnDependencyOptions;\n  if (reactNativePath) {\n    rnDependencyOptions = { reactNativePath };\n  } else {\n    rnDependencyOptions = {};\n  }\n\n  const expoKitPath = moreSubstitutions.EXPOKIT_PATH;\n  const expoKitTag = moreSubstitutions.EXPOKIT_TAG;\n  let expoKitDependencyOptions = {};\n  if (expoKitPath) {\n    expoKitDependencyOptions = { expoKitPath };\n  } else if (expoKitTag) {\n    expoKitDependencyOptions = { expoKitTag };\n  }\n\n  let versionedRnPath = moreSubstitutions.VERSIONED_REACT_NATIVE_PATH;\n  if (!versionedRnPath) {\n    versionedRnPath = './versioned-react-native';\n  }\n  let rnExpoSubspecs = moreSubstitutions.REACT_NATIVE_EXPO_SUBSPECS;\n  if (!rnExpoSubspecs) {\n    rnExpoSubspecs = ['Expo'];\n  }\n\n  let versionedDependencies = await _renderVersionedReactNativeDependenciesAsync(\n    templatesDirectory,\n    versionedRnPath,\n    rnExpoSubspecs,\n    shellAppSdkVersion\n  );\n  let versionedPostinstalls = await _renderVersionedReactNativePostinstallsAsync(\n    templatesDirectory,\n    shellAppSdkVersion\n  );\n  let podDependencies = await _renderPodDependenciesAsync(\n    path.join(templatesDirectory, 'dependencies.json'),\n    { isPodfile: true }\n  );\n\n  let universalModules = moreSubstitutions.UNIVERSAL_MODULES;\n  if (!universalModules) {\n    universalModules = [];\n  }\n\n  let substitutions = {\n    EXPONENT_CLIENT_DEPS: podDependencies,\n    EXPOKIT_DEPENDENCY: _renderExpoKitDependency(expoKitDependencyOptions, sdkVersion),\n    PODFILE_UNVERSIONED_EXPO_MODULES_DEPENDENCIES: _renderUnversionedUniversalModulesDependencies(\n      universalModules,\n      moreSubstitutions.UNIVERSAL_MODULES_PATH,\n      sdkVersion\n    ),\n    PODFILE_UNVERSIONED_RN_DEPENDENCY: _renderUnversionedReactNativeDependency(\n      rnDependencyOptions,\n      sdkVersion\n    ),\n    PODFILE_UNVERSIONED_POSTINSTALL: _renderUnversionedPostinstall(sdkVersion),\n    PODFILE_DETACHED_POSTINSTALL: _renderDetachedPostinstall(sdkVersion, false),\n    PODFILE_DETACHED_SERVICE_POSTINSTALL: _renderDetachedPostinstall(sdkVersion, true),\n    PODFILE_VERSIONED_RN_DEPENDENCIES: versionedDependencies,\n    PODFILE_VERSIONED_POSTINSTALLS: versionedPostinstalls,\n    PODFILE_TEST_TARGET: shellAppSdkVersion ? '' : _renderTestTarget(reactNativePath),\n    ...moreSubstitutions,\n  };\n  _validatePodfileSubstitutions(substitutions);\n\n  let result = templateString;\n  for (let key in substitutions) {\n    if (substitutions.hasOwnProperty(key)) {\n      let replacement = substitutions[key];\n      result = result.replace(new RegExp(`\\\\$\\\\{${key}\\\\}`, 'g'), replacement);\n    }\n  }\n\n  await fs.writeFile(pathToOutput, result);\n}\n\nexport { renderExpoKitPodspecAsync, renderPodfileAsync };\n"],"sourceRoot":"/@expo/xdl@57.7.1/src"}